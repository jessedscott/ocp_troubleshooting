---
apiVersion: v1
kind: Namespace
metadata:
  name: matrix-chat
---
apiVersion: v1
data:
  homeserver.yaml: "server_name: apps.ocp4.example.com \npublic_baseurl: https://synapse.apps.ocp4.example.com/\nweb_client_location:
    https://element.apps.ocp4.example.com/\nemail:\n  app_name: Matrix Chat\n  notif_from:
    \"Matrix Chat <noreply@example.com>\"   \n  enable_notifs: false\nreport_stats:
    False\ndatabase:\n  name: \"psycopg2\"\n  allow_unsafe_locale: True\n  args:\n
    \   user: \"matrix\"\n    password: \"matrix\"\n    database: \"matrix\"\n    host:
    \"postgresql\"\n    cp_min: 5\n    cp_max: 10\ntrusted_key_servers:\n
    \ - server_name: \"matrix.org\"\n"
kind: ConfigMap
metadata:
  name: matrix 
  namespace: matrix-chat
---
apiVersion: v1
data:
  POSTGRESQL_DATABASE: bWF0cml4
  POSTGRESQL_PASSWORD: bWF0cml4
  POSTGRESQL_USER: bWF0cml4
kind: Secret
metadata:
  name: postgresql
  namespace: matrix-chat
type: Opaque
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: matrix
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
  storageClassName: nfs-storage
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: mediastore 
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
  storageClassName: nfs-storage
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: postgresql
  name: postgresql
  namespace: matrix-chat
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: postgresql
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: postgresql
    spec:
      containers:
      - env:
        - name: POSTGRESQL_DATABASE
          valueFrom:
            secretKeyRef:
              key: POSTGRESQL_DATABASE
              name: postgresql
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: POSTGRESQL_PASSWORD
              name: postgresql
        - name: POSTGRESQL_USER
          valueFrom:
            secretKeyRef:
              key: POSTGRESQL_USER
              name: postgresql
        image: registry.ocp4.example.com:8443/rhel8/postgresql-15
        imagePullPolicy: Always
        name: postgresql-15
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: postgresql
  name: postgresql
  namespace: matrix-chat
spec:
  ports:
  - port: 5432
    protocol: TCP
    targetPort: 5432
  selector:
    app: postgresql
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: matrix 
  name: matrix
  namespace: matrix-chat
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: matrix
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: matrix
    spec:
      containers:
      - image: ghcr.io/element-hq/synapse:v1.128.0
        imagePullPolicy: IfNotPresent
        name: matrix
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /data
          name: data
        - mountPath: /media_store
          name: mediastore
        - mountPath: /data/homeserver.yaml
          name: matrix
          subPath: homeserver.yaml
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: matrix
      - name: mediastore
        persistentVolumeClaim:
          claimName: mediastore
      - configMap:
          defaultMode: 420
          items:
          - key: homeserver.yaml
            path: homeserver.yaml
          name: matrix 
        name: matrix 
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: matrix
  name: matrix
  namespace: matrix-chat
spec:
  ports:
  - port: 8008
    protocol: TCP
    targetPort: 8008
  selector:
    app: matrix
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    app: matrix
  name: matrix
  namespace: matrix-chat
spec:
  host: matrix.apps.ocp4.example.com
  tls:
    termination: edge
  to:
    kind: Service
    name: matrix
    weight: 100
  wildcardPolicy: None
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: element
  namespace: matrix-chat
data:
  config.json: |
    {
        "default_server_config": {
            "m.homeserver": {
                "base_url": "https://matrix.apps.ocp4.example.com",
                "server_name": "matrix.apps.ocp4.example.com"
            },
            "m.identity_server": {
                "base_url": "https://vector.im"
            }
        },
        "disable_custom_urls": false,
        "disable_guests": false,
        "disable_login_language_selector": false,
        "disable_3pid_login": false,
        "brand": "Element",
        "integrations_ui_url": "https://scalar.vector.im/",
        "integrations_rest_url": "https://scalar.vector.im/api",
        "integrations_widgets_urls": [
                "https://scalar.vector.im/_matrix/integrations/v1",
                "https://scalar.vector.im/api",
                "https://scalar-staging.vector.im/_matrix/integrations/v1",
                "https://scalar-staging.vector.im/api",
                "https://scalar-staging.riot.im/scalar/api"
        ],
        "bug_report_endpoint_url": "https://element.io/bugreports/submit",
        "defaultCountryCode": "GB",
        "show_labs_settings": false,
        "features": { },
        "default_federate": true,
        "default_theme": "light",
        "room_directory": {
            "servers": [
                    "matrix.org"
            ]
        },
        "enable_presence_by_hs_url": {
            "https://matrix.org": false,
            "https://matrix-client.matrix.org": false
        },
        "setting_defaults": {
            "breadcrumbs": true
        },
        "jitsi": {
            "preferred_domain": "meet.element.io"
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: element
  namespace: matrix-chat
spec:
  selector:
    matchLabels:
      app: element
  replicas: 1
  template:
    metadata:
      labels:
        app: element
    spec:
      containers:
      - env:
        - name: ELEMENT_WEB_PORT
          value: "8080"
        image: docker.io/vectorim/element-web:v1.11.97
        name: element
        volumeMounts:
        - name: config-volume
          mountPath: /app/config.json
          subPath: config.json
        ports:
        - containerPort: 8080
          name: element
          protocol: TCP
        readinessProbe:
            httpGet:
                path: /
                port: element
            initialDelaySeconds: 2
            periodSeconds: 3
        livenessProbe:
            httpGet:
                path: /
                port: element
            initialDelaySeconds: 10
            periodSeconds: 10
      volumes:
      - name: config-volume
        configMap:
          name: element
---
apiVersion: v1
kind: Service
metadata:
  name: element
  namespace: matrix-chat
spec:
  selector:
    app: element
  ports:
    - name: default
      protocol: TCP
      port: 8080
      targetPort: 8080
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    app.kubernetes.io/instance: chat
    app.kubernetes.io/name: element
  name: element
  namespace: matrix-chat
spec:
  host: element.apps.ocp4.example.com
  tls:
    termination: edge
  to:
    kind: Service
    name: element
    weight: 100
  wildcardPolicy: None 
